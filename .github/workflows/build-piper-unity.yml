name: Build Piper for Unity Android

on:
  workflow_dispatch:
  push:
    branches: [main, master]
  pull_request:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Piper
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build autoconf automake libtool pkg-config \
            cmake curl unzip

      - name: Set up Android NDK
        id: ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d

      - name: Clone eSpeak-NG
        run: git clone https://github.com/espeak-ng/espeak-ng.git

      - name: Build eSpeak-NG for Android (arm64)
        run: |
          export ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}
          cd espeak-ng
          mkdir build-android && cd build-android
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-21 \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_FLAGS_RELEASE="-s -fvisibility=hidden" \
            -DCMAKE_CXX_FLAGS_RELEASE="-s -fvisibility=hidden" \
            -DCMAKE_SHARED_LINKER_FLAGS="-Wl,--no-undefined" \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -DCMAKE_INSTALL_PREFIX=/usr/local \
            -G Ninja
          ninja
          # install into a staging dir so we can point piper-phonemize at it
          DESTDIR=$PWD/install-android ninja install

      - name: Download ONNX Runtime AArch64
        run: |
          ORT_VERSION=1.16.3
          mkdir -p third_party && cd third_party

          echo "Fetching ONNX Runtime asset URL..."
          ASSET_URL=$(
            curl -s "https://api.github.com/repos/microsoft/onnxruntime/releases/tags/v${ORT_VERSION}" \
            | grep browser_download_url \
            | grep android-aarch64 \
            | head -n1 \
            | cut -d '"' -f4
          )
          echo "â†’ $ASSET_URL"

          curl -L --fail -o asset "$ASSET_URL"
          if [[ "$ASSET_URL" == *.tgz ]]; then
            tar -xzf asset
          elif [[ "$ASSET_URL" == *.zip ]]; then
            unzip asset
          else
            echo "Unknown format: $ASSET_URL" >&2
            exit 1
          fi

          # Rename extracted folder to a stable name
          EXTR=$(find . -maxdepth 1 -type d -name "*android-aarch64*" | head -n1)
          mv "$EXTR" onnxruntime-android

          echo "ORT_ANDROID_DIR=$(pwd)/onnxruntime-android" >> "$GITHUB_ENV"
          ls -R onnxruntime-android | head

      - name: Clone piper-phonemize
        run: git clone https://github.com/rhasspy/piper-phonemize.git

      - name: Build piper-phonemize for Android
        run: |
          export ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}
          # absolute path to your eSpeak-NG install:
          ESPEAK_INSTALL_PREFIX=$(pwd)/espeak-ng/build-android/install-android/usr/local

          cd piper-phonemize
          mkdir build-android && cd build-android
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-21 \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DESPEAK_NG_DIR=$ESPEAK_INSTALL_PREFIX \
            -DONNXRUNTIME_DIR=$ORT_ANDROID_DIR \
            -DCMAKE_C_FLAGS_RELEASE="-s -fvisibility=hidden" \
            -DCMAKE_CXX_FLAGS_RELEASE="-s -fvisibility=hidden" \
            -DCMAKE_SHARED_LINKER_FLAGS="-Wl,--no-undefined" \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -G Ninja
          ninja

      - name: Build Piper Core for Android
        run: |
          export ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}
          mkdir build-android && cd build-android
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-21 \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -Dphonemize_DIR=../piper-phonemize/build-android \
            -DONNXRUNTIME_DIR=$ORT_ANDROID_DIR \
            -DCMAKE_C_FLAGS_RELEASE="-s -fvisibility=hidden" \
            -DCMAKE_CXX_FLAGS_RELEASE="-s -fvisibility=hidden" \
            -DCMAKE_SHARED_LINKER_FLAGS="-Wl,--no-undefined" \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -G Ninja
          ninja

      - name: Upload Piper Android .so
        uses: actions/upload-artifact@v4
        with:
          name: piper-android-so
          path: build-android/libpiper.so

      - name: Upload piper-phonemize Android .so
        uses: actions/upload-artifact@v4
        with:
          name: piper-phonemize-android-so
          path: piper-phonemize/build-android/libpiper_phonemize.so

      - name: Upload eSpeak-NG Android .so
        uses: actions/upload-artifact@v4
        with:
          name: espeak-ng-android-so
          path: espeak-ng/build-android/install-android/usr/local/lib/libespeak-ng.so
