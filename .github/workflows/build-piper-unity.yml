name: Build Piper for Unity Android

on:
  workflow_dispatch:
  push:
    branches: [main, master]
  pull_request:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Piper
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build autoconf automake libtool pkg-config cmake curl unzip

      - name: Set up Android NDK
        id: ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d

      - name: Clone & Build eSpeak-NG for Android (arm64)
        run: |
          export ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}
          git clone --depth 1 https://github.com/espeak-ng/espeak-ng.git espeak-ng
          cd espeak-ng
          mkdir build-android && cd build-android
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-21 \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_FLAGS_RELEASE="-s -fvisibility=hidden" \
            -DCMAKE_CXX_FLAGS_RELEASE="-s -fvisibility=hidden" \
            -DCMAKE_SHARED_LINKER_FLAGS="-Wl,--no-undefined" \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -G Ninja
          ninja
          # install into ./install-android/usr/local/{lib,include}
          DESTDIR=$PWD/install-android ninja install
          ls install-android/usr/local/{lib,include}

      - name: Download ONNX Runtime for Android (aarch64)
        run: |
          ORT_VERSION=1.12.0
          mkdir -p third_party && cd third_party

          TGZ_URL="https://github.com/microsoft/onnxruntime/releases/download/v${ORT_VERSION}/onnxruntime-android-aarch64-${ORT_VERSION}.tgz"
          ZIP_URL="https://github.com/microsoft/onnxruntime/releases/download/v${ORT_VERSION}/onnxruntime-android-aarch64-${ORT_VERSION}.zip"

          echo "Trying TGZ asset: $TGZ_URL"
          if curl -L --fail -o ort.tgz "$TGZ_URL"; then
            tar -xzf ort.tgz
          else
            echo "TGZ not found, trying ZIP: $ZIP_URL"
            curl -L --fail -o ort.zip "$ZIP_URL"
            unzip ort.zip
          fi

          # Move extracted directory to stable name
          EXTRACTED=$(find . -maxdepth 1 -type d -name "onnxruntime-android-aarch64*" | head -n1)
          mv "$EXTRACTED" onnxruntime-android

          echo "ORT_ANDROID_DIR=$(pwd)/onnxruntime-android" >> "$GITHUB_ENV"
          ls -R onnxruntime-android | head

      - name: Clone Piper-Phonemize
        run: |
          git clone --depth 1 https://github.com/rhasspy/piper-phonemize.git

      - name: Build Piper-Phonemize for Android
        env:
          ANDROID_NDK_HOME: ${{ steps.ndk.outputs.ndk-path }}
          ORT_ANDROID_DIR: ${{ env.ORT_ANDROID_DIR }}
        run: |
          cd piper-phonemize
          mkdir build-android && cd build-android
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-21 \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_FLAGS_RELEASE="-s -fvisibility=hidden" \
            -DCMAKE_CXX_FLAGS_RELEASE="-s -fvisibility=hidden" \
            -DCMAKE_SHARED_LINKER_FLAGS="-Wl,--no-undefined" \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -DESPEAK_NG_DIR=../../espeak-ng/build-android/install-android/usr/local \
            -DONNXRUNTIME_DIR=$ORT_ANDROID_DIR \
            -G Ninja
          ninja
          ls libpiper_phonemize.so

      - name: Build Piper for Android
        env:
          ANDROID_NDK_HOME: ${{ steps.ndk.outputs.ndk-path }}
          ORT_ANDROID_DIR: ${{ env.ORT_ANDROID_DIR }}
        run: |
          mkdir build-android && cd build-android
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-21 \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_FLAGS_RELEASE="-s -fvisibility=hidden" \
            -DCMAKE_CXX_FLAGS_RELEASE="-s -fvisibility=hidden" \
            -DCMAKE_SHARED_LINKER_FLAGS="-Wl,--no-undefined" \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -Dphonemize_DIR=../piper-phonemize/build-android \
            -DONNXRUNTIME_DIR=$ORT_ANDROID_DIR \
            -G Ninja
          ninja
          ls libpiper.so

      - name: Upload Piper Android .so
        uses: actions/upload-artifact@v4
        with:
          name: piper-android-so
          path: build-android/libpiper.so

      - name: Upload Piper-Phonemize Android .so
        uses: actions/upload-artifact@v4
        with:
          name: piper-phonemize-android-so
          path: piper-phonemize/build-android/libpiper_phonemize.so

      - name: Upload eSpeak-NG Android .so
        uses: actions/upload-artifact@v4
        with:
          name: espeak-ng-android-so
          path: espeak-ng/build-android/install-android/usr/local/lib/libespeak-ng.so
