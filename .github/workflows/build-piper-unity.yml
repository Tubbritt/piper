name: Build Piper for Unity Android

on:
  workflow_dispatch:
  push: { branches: [ main, master ] }
  pull_request:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
    # ------------------------------------------------------------------ #
    # 1 · Checkout                                                       #
    # ------------------------------------------------------------------ #
    - name: Checkout source
      uses: actions/checkout@v4

    # ------------------------------------------------------------------ #
    # 2 · Host-side build tools                                          #
    # ------------------------------------------------------------------ #
    - name: Install prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build autoconf automake libtool \
                               pkg-config cmake curl unzip

    # ------------------------------------------------------------------ #
    # 3 · Android NDK r26d                                               #
    # ------------------------------------------------------------------ #
    - name: Set up Android NDK
      id: ndk
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r26d

    - name: Export common env
      run: |
        echo "ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}" >> $GITHUB_ENV
        echo "ANDROID_ABI=arm64-v8a"                             >> $GITHUB_ENV
        echo "ANDROID_PLATFORM=android-21"                      >> $GITHUB_ENV
        echo "ANDROID_STL=c++_shared"                           >> $GITHUB_ENV   # ✨ NEW

    # ------------------------------------------------------------------ #
    # 4 · eSpeak-NG (shared)                                             #
    # ------------------------------------------------------------------ #
    - name: Clone eSpeak-NG
      run: git clone https://github.com/espeak-ng/espeak-ng.git

    - name: Build eSpeak-NG
      run: |
        cd espeak-ng
        mkdir build-android && cd build-android
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=$ANDROID_ABI \
          -DANDROID_PLATFORM=$ANDROID_PLATFORM \
          -DANDROID_STL=$ANDROID_STL \             # ✨
          -DBUILD_SHARED_LIBS=ON \
          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -G Ninja
        ninja
        cmake --install . --prefix install-android
        echo "ESPEAK_NG_ANDROID=$PWD/install-android" >> $GITHUB_ENV

    # ------------------------------------------------------------------ #
    # 5 · ONNX Runtime (Android AAR)                                     #
    # ------------------------------------------------------------------ #
    - name: Download ONNX Runtime (Android arm64)
      run: |
        ORT_VERSION=1.17.0
        mkdir -p third_party && cd third_party
        curl -L -o ort.aar \
          "https://repo1.maven.org/maven2/com/microsoft/onnxruntime/onnxruntime-android/${ORT_VERSION}/onnxruntime-android-${ORT_VERSION}.aar"
        unzip -q ort.aar -d ort
        mkdir -p onnxruntime-android/include onnxruntime-android/lib
        cp -r ort/headers/*  onnxruntime-android/include/
        cp    ort/jni/arm64-v8a/libonnxruntime.so onnxruntime-android/lib/
        echo "ORT_ANDROID_DIR=$PWD/onnxruntime-android" >> $GITHUB_ENV

    # ------------------------------------------------------------------ #
    # 6 · fmt (static)                                                   #
    # ------------------------------------------------------------------ #
    - name: Clone fmt
      run: git clone --depth 1 --branch 10.2.1 https://github.com/fmtlib/fmt.git

    - name: Build fmt
      run: |
        cd fmt
        mkdir build-android && cd build-android
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=$ANDROID_ABI \
          -DANDROID_PLATFORM=$ANDROID_PLATFORM \
          -DANDROID_STL=$ANDROID_STL \             # ✨
          -DBUILD_SHARED_LIBS=OFF \
          -DFMT_TEST=OFF \
          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -G Ninja
        ninja
        cmake --install . --prefix install-android
        echo "FMT_ANDROID=$PWD/install-android" >> $GITHUB_ENV

    # ------------------------------------------------------------------ #
    # 7 · spdlog (static, bundled fmt)                                   #
    # ------------------------------------------------------------------ #
    - name: Clone spdlog
      run: git clone --depth 1 --branch v1.13.0 https://github.com/gabime/spdlog.git

    - name: Build spdlog
      run: |
        cd spdlog
        mkdir build-android && cd build-android
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=$ANDROID_ABI \
          -DANDROID_PLATFORM=$ANDROID_PLATFORM \
          -DANDROID_STL=$ANDROID_STL \             # ✨
          -DBUILD_SHARED_LIBS=OFF \
          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -G Ninja
        ninja
        cmake --install . --prefix install-android
        echo "SPDLOG_ANDROID=$PWD/install-android" >> $GITHUB_ENV

    # ------------------------------------------------------------------ #
    # 8 · piper-phonemize (shared)                                       #
    # ------------------------------------------------------------------ #
    - name: Clone piper-phonemize
      run: git clone https://github.com/rhasspy/piper-phonemize.git

    - name: Build piper-phonemize
      run: |
        cd piper-phonemize
        mkdir build-android && cd build-android
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=$ANDROID_ABI \
          -DANDROID_PLATFORM=$ANDROID_PLATFORM \
          -DANDROID_STL=$ANDROID_STL \             # ✨
          -DBUILD_SHARED_LIBS=ON \
          -DESPEAK_NG_DIR=$ESPEAK_NG_ANDROID \
          -DONNXRUNTIME_DIR=$ORT_ANDROID_DIR \
          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
          -DCMAKE_INSTALL_PREFIX=install-android \
          -G Ninja
        ninja
        cmake --install . --prefix install-android
        echo "PIPER_PHONEMIZE_ANDROID=$PWD/install-android" >> $GITHUB_ENV

    # ------------------------------------------------------------------ #
    # 9 · Strip newline in VERSION                                       #
    # ------------------------------------------------------------------ #
    - name: Fix VERSION
      run: |
        tr -d '\n' < VERSION > VERSION.tmp && mv VERSION.tmp VERSION

    # ------------------------------------------------------------------ #
    # 10 · Piper core (shared)                                           #
    # ------------------------------------------------------------------ #
    - name: Build Piper
      run: |
        mkdir build-android && cd build-android
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=$ANDROID_ABI \
          -DANDROID_PLATFORM=$ANDROID_PLATFORM \
          -DANDROID_STL=$ANDROID_STL \             # ✨
          -DBUILD_SHARED_LIBS=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DFMT_DIR=$FMT_ANDROID \
          -DSPDLOG_DIR=$SPDLOG_ANDROID \
          -DPIPER_PHONEMIZE_DIR=$PIPER_PHONEMIZE_ANDROID \
          -DCMAKE_PREFIX_PATH="$FMT_ANDROID;$SPDLOG_ANDROID;$PIPER_PHONEMIZE_ANDROID;$ESPEAK_NG_ANDROID;$ORT_ANDROID_DIR" \
          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
          -DBUILD_TESTING=OFF \
          -G Ninja
        ninja
        cmake --install . --prefix install-android

    # ------------------------------------------------------------------ #
    # 11 · Upload Unity-ready .so files                                   #
    # ------------------------------------------------------------------ #
    - name: Upload Android libraries
      uses: actions/upload-artifact@v4
      with:
        name: piper-android-libs
        path: |
          build-android/install-android/lib/libpiper.so
          piper-phonemize/build-android/install-android/lib/libpiper_phonemize.so
          espeak-ng/build-android/install-android/lib/libespeak-ng.so
