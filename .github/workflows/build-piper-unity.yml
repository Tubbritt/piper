name: Build Piper for Unity Android

on:
  workflow_dispatch:
  push:
    branches: [main, master]
  pull_request:

jobs:
  build-android:
    runs-on: ubuntu-latest

    env:
      ANDROID_ABI: arm64-v8a
      ANDROID_PLATFORM: android-21
      ORT_VERSION: 1.14.1
      ESPEAK_INSTALL_PREFIX: ${{ github.workspace }}/espeak-ng/install-android

    steps:
    # ------------------------------------------------------------
    # House-keeping
    # ------------------------------------------------------------
    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build autoconf automake libtool pkg-config cmake curl

    - name: Set up Android NDK
      id: ndk
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r26d

    # ------------------------------------------------------------
    # eSpeak-NG (cross-compile for Android)
    # ------------------------------------------------------------
    - name: Clone espeak-ng
      run: git clone --depth 1 https://github.com/espeak-ng/espeak-ng.git

    - name: Build espeak-ng for Android
      run: |
        export ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}
        cd espeak-ng
        mkdir build-android && cd build-android
        cmake .. \
          -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=$ANDROID_ABI \
          -DANDROID_PLATFORM=$ANDROID_PLATFORM \
          -DBUILD_SHARED_LIBS=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=$ESPEAK_INSTALL_PREFIX
        ninja install
        file $ESPEAK_INSTALL_PREFIX/lib/libespeak-ng.so   # sanity-check

    # ------------------------------------------------------------
    # ONNX Runtime (pre-built Android arm64)
    # ------------------------------------------------------------
    - name: Download ONNX Runtime for Android
      run: |
        mkdir -p third_party && cd third_party
        curl -sSL -o ort.tgz \
          https://github.com/microsoft/onnxruntime/releases/download/v${ORT_VERSION}/onnxruntime-android-aarch64-${ORT_VERSION}.tgz
        tar -xzf ort.tgz
        mv onnxruntime-android-aarch64-${ORT_VERSION} onnxruntime-android
        ls -R onnxruntime-android

    # ------------------------------------------------------------
    # piper-phonemize (build against Android eSpeak-NG + ORT)
    # ------------------------------------------------------------
    - name: Clone piper-phonemize
      run: git clone --depth 1 https://github.com/rhasspy/piper-phonemize.git

    - name: Build piper-phonemize for Android
      run: |
        export ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}
        ESPEAK_NG_LIB=$ESPEAK_INSTALL_PREFIX/lib/libespeak-ng.so
        ESPEAK_NG_INC=$ESPEAK_INSTALL_PREFIX/include
        ONNX_ROOT=$GITHUB_WORKSPACE/third_party/onnxruntime-android
        cd piper-phonemize
        mkdir -p build-android && cd build-android
        cmake .. \
          -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=$ANDROID_ABI \
          -DANDROID_PLATFORM=$ANDROID_PLATFORM \
          -DBUILD_SHARED_LIBS=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DESPEAK_NG_LIBRARY=$ESPEAK_NG_LIB \
          -DESPEAK_NG_INCLUDE_DIR=$ESPEAK_NG_INC \
          -DCMAKE_PREFIX_PATH="$ONNX_ROOT"
        ninja
        file libpiper_phonemize.so

    # ------------------------------------------------------------
    # Piper core (linking to piper-phonemize + deps)
    # ------------------------------------------------------------
    - name: Clone Piper
      run: git clone --depth 1 https://github.com/rhasspy/piper.git

    - name: Build Piper for Android
      run: |
        export ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}
        cd piper
        mkdir -p build-android && cd build-android
        cmake .. \
          -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=$ANDROID_ABI \
          -DANDROID_PLATFORM=$ANDROID_PLATFORM \
          -DBUILD_SHARED_LIBS=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -Dphonemize_DIR=$GITHUB_WORKSPACE/piper-phonemize/build-android \
          -DCMAKE_PREFIX_PATH="$ESPEAK_INSTALL_PREFIX;$GITHUB_WORKSPACE/third_party/onnxruntime-android"
        ninja
        file libpiper.so

    # ------------------------------------------------------------
    # Artefacts
    # ------------------------------------------------------------
    - name: Upload Piper .so
      uses: actions/upload-artifact@v4
      with:
        name: piper-android-so
        path: piper/build-android/libpiper.so

    - name: Upload piper-phonemize .so
      uses: actions/upload-artifact@v4
      with:
        name: piper-phonemize-android-so
        path: piper-phonemize/build-android/libpiper_phonemize.so

    - name: Upload espeak-ng .so
      uses: actions/upload-artifact@v4
      with:
        name: espeak-ng-android-so
        path: ${{ env.ESPEAK_INSTALL_PREFIX }}/lib/libespeak-ng.so
