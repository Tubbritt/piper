name: Build Piper for Unity Android

on:
  workflow_dispatch:
  push:
    branches: [main, master]
  pull_request:

jobs:
  build-android:
    runs-on: ubuntu-latest

    env:
      ORT_VERSION: 1.22.0
      ANDROID_ABI: arm64-v8a
      ANDROID_PLATFORM: android-24  # ONNX Runtime 1.22 requires min API 24

    steps:
      - name: Checkout Piper
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build autoconf automake libtool pkg-config cmake unzip curl

      - name: Set up Android NDK
        id: ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d

      - name: Download ONNX Runtime for Android
        run: |
          mkdir -p third_party && cd third_party
          curl -L --fail -o ort.aar \
            "https://repo1.maven.org/maven2/com/microsoft/onnxruntime/onnxruntime-android/${ORT_VERSION}/onnxruntime-android-${ORT_VERSION}.aar"
          unzip ort.aar -d onnxruntime-android
          echo "ORT_ANDROID_DIR=$(pwd)/onnxruntime-android" >> "$GITHUB_ENV"
          ls -R onnxruntime-android | head

      - name: Clone eSpeak-NG
        run: |
          git clone https://github.com/espeak-ng/espeak-ng.git

      - name: Build eSpeak-NG for Android
        run: |
          export ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}
          cd espeak-ng
          mkdir build-android && cd build-android
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${ANDROID_ABI} \
            -DANDROID_PLATFORM=${ANDROID_PLATFORM} \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -G Ninja
          ninja
          mkdir -p install/include install/lib
          cp ../src/include/* install/include/
          cp libespeak-ng.so install/lib/
          echo "ESPEAK_INSTALL_PREFIX=$(pwd)/install" >> "$GITHUB_ENV"
          ls -lh install/lib/libespeak-ng.so

      - name: Clone piper-phonemize
        run: |
          git clone https://github.com/rhasspy/piper-phonemize.git

      - name: Build piper-phonemize for Android
        run: |
          export ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}
          cd piper-phonemize
          mkdir build-android && cd build-android
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${ANDROID_ABI} \
            -DANDROID_PLATFORM=${ANDROID_PLATFORM} \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DESPEAK_NG_INCLUDE_DIR=${{ env.ESPEAK_INSTALL_PREFIX }}/include \
            -DESPEAK_NG_LIBRARY=${{ env.ESPEAK_INSTALL_PREFIX }}/lib/libespeak-ng.so \
            -DONNXRUNTIME_INCLUDE_DIR=${{ env.ORT_ANDROID_DIR }}/headers \
            -DONNXRUNTIME_LIB_DIR=${{ env.ORT_ANDROID_DIR }}/jni/${ANDROID_ABI} \
            -G Ninja
          ninja
          ls -lh libpiper_phonemize.so

      - name: Build Piper for Android
        run: |
          export ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}
          mkdir -p build-android && cd build-android
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${ANDROID_ABI} \
            -DANDROID_PLATFORM=${ANDROID_PLATFORM} \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -Dphonemize_DIR=../piper-phonemize/build-android \
            -DCMAKE_PREFIX_PATH=${{ env.ESPEAK_INSTALL_PREFIX }}/lib \
            -G Ninja
          ninja
          ls -lh libpiper.so

      - name: Upload Piper .so
        uses: actions/upload-artifact@v4
        with:
          name: piper-android-so
          path: build-android/libpiper.so

      - name: Upload piper-phonemize .so
        uses: actions/upload-artifact@v4
        with:
          name: piper-phonemize-android-so
          path: piper-phonemize/build-android/libpiper_phonemize.so

      - name: Upload espeak-ng .so
        uses: actions/upload-artifact@v4
        with:
          name: espeak-ng-android-so
          path: espeak-ng/build-android/install/lib/libespeak-ng.so
